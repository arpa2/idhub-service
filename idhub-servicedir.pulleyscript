# idhub-servicedio.pulleyscript
#
# This script pulls data from LDAP, and outputs pairs for the
# relations that matter for the IdentityHub:
#
#  - pseudonym         for mutual seeAlso references
#  - alias             for nested inetOrgPerson entries
#  - group membership  for mutual member/membership
#  - role occupancy    for mutual roleOccupant/occupation
#
# Somewhat more detail is in dit.graphml and dit.pdf
#
# From: Rick van Rein <rick@openfortress.nl>


#
# PSEUDONYMS: Find back-references with seeAlso
#
@idhub, AssociatedDomain=dom <- OU=IdentityHub,O=internetwide.org, OU=ServiceDIT, world

Uid:pseudonym  + UidPseudonym:loginacct <- idhub

#TODO# Might check for identityHubUser class

dom,loginacct,pseudonym -> erlang_node ("noname@nonode", "pseudonym")


#
# ALIASES: Look for UidAlias attributes
#

Uid:aliasName + UidAlias:aliasOrigin <- idhub

#TODO# Might check matching identityHubXXX classes here

dom,aliasOrigin,aliasName -> erlang_node ("noname@nonode", "alias")


#
# GROUPS: Find pairs of uidMember and uidGroup
#

Uid:member + UidGroup:memberToGroup  <- idhub
Uid:group  + UidMember:groupToMember <- idhub

# Check that the identities are in bidirectional agreement
( member = groupToMember )
( group  = memberToGroup )

dom,group,member -> erlang_node ("noname@nonode", "group")


#
# ROLES: Find pairs of uidOccupant and uidRole
#

Uid:occupant + UidRole:occupantToRole       <- idhub
Uid:role     + UidOccupation:roleToOccupant <- idhub

# Check that the identities are in bidirectional agreement
( occupant = roleToOccupant )
( role     = occupantToROle )

dom,role,occupant -> erlang_node ("noname@nonode", "role")


