# idhub-servicedio.pulleyscript
#
# This script pulls data from LDAP, and outputs pairs for the
# relations that matter for the IdentityHub:
#
#  - pseudonym         for mutual seeAlso references
#  - alias             for nested inetOrgPerson entries
#  - group membership  for mutual member/membership
#  - role occupancy    for mutual roleOccupant/occupation
#
# Somewhat more detail is in dit.graphml and dit.pdf
#
# From: Rick van Rein <rick@openfortress.nl>


#
# PSEUDONYMS: Find back-references with seeAlso
#
AssociatedDomain:dom, @idhub <- OU=IdentityHub,O=internetwideDOTorg, OU=ServiceDIT, world

Uid:pseudonym  + UidPseudonym:loginacct <- idhub

#TODO# Might check for identityHubUser class

dom,loginacct,pseudonym -> erlang_node (tgt="noname@nonode", msg="pseudonym")


#
# ALIASES: Look for UidAlias attributes
#

Uid:aliasName + UidAlias:aliasOrigin <- idhub

#TODO# Might check matching identityHubXXX classes here

dom,aliasOrigin,aliasName -> erlang_node (tgt="noname@nonode", msg="alias")


#
# GROUPS: Find pairs of uidMember and uidGroup
#

#OLDFASHIONED# Uid:member + UidGroup:memberToGroup  <- idhub
#OLDFASHIONED# Uid:group  + UidMember:groupToMember <- idhub
#OLDFASHIONED# 
#OLDFASHIONED# # Check that the identities are in bidirectional agreement
#OLDFASHIONED# ( member = groupToMember )
#OLDFASHIONED# ( group  = memberToGroup )

Uid:member + UidGroup:group   <- idhub
Uid:group  + UidMember:member <- idhub

dom,member,group -> erlang_node (tgt="noname@nonode", msg="group")


#
# ROLES: Find pairs of uidOccupant and uidRole
#

#OLDFASHIONED# Uid:occupant + UidRole:occupantToRole       <- idhub
#OLDFASHIONED# Uid:role     + UidOccupation:roleToOccupant <- idhub
#OLDFASHIONED# 
#OLDFASHIONED# # Check that the identities are in bidirectional agreement
#OLDFASHIONED# ( occupant = roleToOccupant )
#OLDFASHIONED# ( role     = occupantToROle )

Uid:occupant + UidRole:role           <- idhub
Uid:role     + UidOccupation:occupant <- idhub

dom,occupant,role -> erlang_node (tgt="noname@nonode", msg="role")


#
# COMMUNICATION: Locate each accessControlList next to a uid
#

Uid:communicator + accessControlList:acl <- idhub

dom,communicator,acl -> erlang_node (tgt="noname@nonode", msg="communication")


#
# RESOURCE: Locate each accessControlList next to a resourceClassUUID
#

ResourceClassUUID:class + accessControlList:clsacl <- idhub

dom,class,acl -> erlang_node (tgt="noname@nonode", msg="resource")

